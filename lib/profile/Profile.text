import 'package:animated_theme_switcher/animated_theme_switcher.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:provider/src/provider.dart';
import 'package:school_app/authentication/bloc/authentication_bloc.dart';
import 'package:school_app/profile/bloc/profile_bloc.dart';
import 'package:school_app/profile/view/edit_profile_page.dart';
import 'package:school_app/profile/widget/button_widget.dart';
import 'package:school_app/profile/widget/profile_widget.dart';
import 'package:school_app/themes.dart';
import 'package:user_repository/user_repository.dart';

class ProfilePage extends StatefulWidget {
  @override
  _ProfilePageState createState() => _ProfilePageState();
  static Route route() {
    return MaterialPageRoute<void>(builder: (_) => ProfilePage());
  }
}

class _ProfilePageState extends State<ProfilePage> {
  @override
  Widget build(BuildContext context) {
    return ThemeSwitchingArea(
      child: Builder(
        builder: (context) => Scaffold(
          appBar: AppBar(
              leading: const BackButton(),
              title: const Text('Profile'),
              actions: []),
          body: BlocProvider(
            create: (context) => ProfileBloc(UserRepository()),
            child: ListView(
              physics: const BouncingScrollPhysics(),
              children: [
                Container(
                  child: BlocConsumer<ProfileBloc, ProfileState>(
                    builder: (context, state) {
                      return buildUserData( Profile(
                          username: "username",
                          email: "email",
                          profileImage: "https://www.shareicon.net/data/128x128/2016/07/26/802043_man_512x512.png"));
                    },
                    listener: (context, state) {
                      if (state is ProfileError) {
                        Scaffold.of(context).showSnackBar(
                          SnackBar(
                            content: Text(state.error),
                          ),
                        );
                      }
                    },
                  ),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }

  Column buildUserData(Profile profile) {
    return Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [
      ProfileWidget(
        imagePath: profile.profileImage,
        onClicked: () {
          Navigator.push(context, EditProfilePage.route());
        },
      ),
      const SizedBox(height: 24),
      buildName(profile),
      const SizedBox(height: 24),
      Center(child: buildUpgradeButton()),
      const SizedBox(height: 24),
      buildAbout(profile)
    ]);
  }

  Widget buildName(Profile user) => Column(
        children: [
          Text(
            user.username,
            style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 24),
          ),
          const SizedBox(height: 4),
          Text(
            user.email,
            style: const TextStyle(color: Colors.grey),
          )
        ],
      );

  Widget buildUpgradeButton() => ButtonWidget(
        text: 'Upgrade To PRO',
        onClicked: () {},
      );

  Widget buildAbout(Profile user) => Container(
        padding: const EdgeInsets.symmetric(horizontal: 48),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: const [
            Text(
              'About',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 16),
            Text(
              "A user is a person who utilizes a computer or network service. A user often has a user account and is identified to the system by a username. Other terms for username include login name, screenname, account name, nickname and handle, which is derived from the identical citizens band radio term.",
              style: TextStyle(fontSize: 16, height: 1.4),
            ),
          ],
        ),
      );
}
